---
name: Update GitHub Projects Issue Type

on:
  issues:
    types: [opened, edited]

permissions: read-all

env:
  PROJECT_ID: "PVT_kwDOBhbkis4AgtTD"
  ISSUE_TYPE_FIELD_ID: "PVTSSF_lADOBhbkis4AgtTDzgVzvpY"

jobs:
  update-github-projects-issue-type:
    runs-on: ubuntu-latest
    name: Update GitHub Projects Issue Type
    steps:
      - name: Check issue for label
        id: check_labels
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.WOFFENDEN_BOT_GITHUB_TOKEN }}
          script: |
            const issue = context.issue;
            const labels = context.payload.issue.labels.map(label => label.name);

            let type;
            if (labels.includes("bug")) {
              type = "bug";
              fieldOptionId = "4a8bf7e4";
            } else if (labels.includes("feature-request")) {
              type = "feature-request";
              fieldOptionId = "69079d3a";
            } else if (labels.includes("story")) {
              type = "story";
              fieldOptionId = "0a294df2";
            }

            if (type) {
              console.log(`Issue is a ${type}`);
              core.setOutput(
                "type", type,
                "field_option_id", fieldOptionId
              );
            } else {
              console.log("Issue is not a bug, epic, feature-request, or story");
              core.setOutput("type", "undefined");
            }

      - name: Add issue to GitHub Project
        id: add_to_project
        env:
          GITHUB_TOKEN: ${{ secrets.WOFFENDEN_BOT_GITHUB_TOKEN }}
        uses: octokit/graphql-action@ed5ac4718507eeda7aacfe7d78062ca18e9a8768 # v2.3.1
        with:
          query: |
            mutation AddIssueToProject($project_id: ID!, $content_id: ID!) {
              addProjectV2ItemById(input: { projectId: $project_id, contentId: $content_id }) {
                  item {
                    id
                  }
                }
              }
          variables: |
            project_id: ${{ env.PROJECT_ID }}
            content_id: ${{ github.event.issue.node_id }}


      - name: Update issue type
        id: update_issue_type
        env:
          GITHUB_TOKEN: ${{ secrets.WOFFENDEN_BOT_GITHUB_TOKEN }}
        uses: octokit/graphql-action@ed5ac4718507eeda7aacfe7d78062ca18e9a8768 # v2.3.1
        with:
          query: |
            mutation UpdateIssueType($item_id: ID!, $project_id: ID!, $area_field_id: ID!, $area_id: String) {
              updateProjectV2ItemFieldValue(
                input: { itemId: $item_id, projectId: $project_id, fieldId: $area_field_id, value: { singleSelectOptionId: $area_id } }) {
                  clientMutationId
                }
              }
          variables: |
            item_id: ${{ fromJSON(steps.add_to_project.outputs.data).addProjectV2ItemById.item.id }}
            project_id: ${{ env.PROJECT_ID }}
            area_field_id: ${{ env.ISSUE_TYPE_FIELD_ID }}
            area_id: ${{ steps.set_output.outputs.field_option_id }}